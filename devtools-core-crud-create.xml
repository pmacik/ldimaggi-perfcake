<?xml version="1.0" encoding="utf-8"?>
<scenario xmlns="urn:perfcake:scenario:7.0">
   <run type="iteration" value="${iteration.count:10000}"/>
   <generator class="DefaultMessageGenerator" threads="${thread.count:10}"/>
   <sequences>
      <sequence id="counter" class="PrimitiveNumberSequence"/>
      <sequence class="ThreadIdSequence" id="threadId"/>
      <sequence id="authToken" class="FileLinesSequence">
         <property name="fileUrl" value="${auth.token.list}"/>
      </sequence>
   </sequences>
   <sender class="HttpClientSender">
      <target>http://${server.host}:${server.port}/api/spaces/${workitems.space.id}/workitems</target>
      <property name="method" value="POST"/>
      <property name="expectedResponseCodes" value="201"/>
   </sender>
   <reporting>
      <reporter class="PostgresqlMonitorReporter">
         <property name="dbUser" value="${db.user}"/>
         <property name="dbPassword" value="${db.password}"/>
         <property name="dbHost" value="${db.host}"/>
         <property name="dbPort" value="${db.port}"/>
         <property name="dbName" value="${db.name}"/>
         <destination class="ConsoleDestination">
            <period type="iteration" value="${report.period:100}"/>
         </destination>
         <destination class="ChartDestination">
            <period type="iteration" value="${report.period:100}"/>
            <property name="name" value="CREATE DB max transaction time"/>
            <property name="group" value="create_db"/>
            <property name="yAxis" value="ms"/>
            <property name="attributes" value="MaxTransactionTime"/>
         </destination>
         <destination class="ChartDestination">
            <period type="iteration" value="${report.period:100}"/>
            <property name="name" value="CREATE DB Activity"/>
            <property name="group" value="create_db_activity"/>
            <property name="yAxis" value="# of processes"/>
            <property name="attributes" value="Active,Idle,IdleInTransaction,Unknown"/>
         </destination>
         <destination class="CsvDestination">
            <period type="iteration" value="${report.period:100}"/>
            <property name="path" value="${perfcake.scenario}-db.csv"/>
         </destination>
      </reporter>
      <reporter class="ResponseTimeStatsReporter">
         <property name="minimumEnabled" value="false"/>
         <property name="maximumEnabled" value="false"/>
         <property name="windowType" value="iteration"/>
         <property name="windowSize" value="${report.period:100}"/>
         <destination class="ChartDestination">
            <period type="iteration" value="${report.period:100}"/>
            <property name="name" value="CREATE Response Time"/>
            <property name="group" value="create_rt"/>
            <property name="yAxis" value="Response Time [ms]"/>
            <property name="attributes" value="Result,Average"/>
         </destination>
         <destination class="ConsoleDestination">
            <period type="iteration" value="${report.period:100}"/>
         </destination>
      </reporter>
      <reporter class="IterationsPerSecondReporter">
         <destination class="CsvDestination">
            <period type="iteration" value="${report.period:100}"/>
            <property name="path" value="${perfcake.scenario}-average-throughput.csv"/>
         </destination>
         <destination class="PerfRepoDestination" enabled="${perfrepo.enabled:false}">
            <period type="percentage" value="100"/>
            <property name="metric" value="throughput"/>
            <property name="repositoryUrl" value="perfrepo.mw.lab.eng.bos.redhat.com"/>
            <property name="authenticationHeader" value="dGVhbXNvYTp0ZWFtc29hMSM="/>
            <property name="testUID" value="${perfcake.scenario}"/>
            <property name="tags" value="${perfrepo.tags}"/>
            <property name="testExecutionName" value="Red Hat Developer Core: ${perfcake.scenario}"/>
            <property name="reporterResultName" value="Result"/>
         </destination>
      </reporter>
      <reporter class="ClassifyingReporter">
         <property name="attribute" value="threadId"/>
         <property name="prefix" value="thread_"/>
         <destination class="ConsoleDestination">
            <period type="percentage" value="100"/>
         </destination>
         <destination class="CsvDestination">
            <period type="percentage" value="100"/>
            <property name="path" value="${perfcake.scenario}-thread-usage.csv"/>
            <property name="expectedAttributes" value="thread*"/>
         </destination>
         <destination class="ChartDestination">
            <period type="percentage" value="100"/>
            <property name="yAxis" value="Thread usage [messages]"/>
            <property name="group" value="create_threads"/>
            <property name="name" value="CREATE Thread usage"/>
            <property name="attributes" value="thread*"/>
            <property name="type" value="bar"/>
         </destination>
      </reporter>
      <reporter class="ResponseTimeHistogramReporter">
         <property name="prefix" value="response-time-percentile-"/>
         <property name="detail" value="1"/>
         <property name="precision" value="3"/>
         <property name="maxExpectedValue" value="60000"/>
         <destination class="ConsoleDestination">
            <period type="percentage" value="100"/>
         </destination>
         <destination class="CsvDestination">
            <period type="percentage" value="100"/>
            <property name="path" value="${perfcake.scenario}-response-time-histogram.csv"/>
            <property name="expectedAttributes" value="response-time-percentile-*"/>
         </destination>
         <destination class="ChartDestination">
            <period type="percentage" value="100"/>
            <property name="yAxis" value="HDR Response time [ms]"/>
            <property name="group" value="create_hdr"/>
            <property name="name" value="CREATE Response Time Histogram"/>
            <property name="attributes" value="response-time-percentile-*"/>
            <property name="type" value="bar"/>
         </destination>
      </reporter>
   </reporting>
   <messages>
      <message content="{&quot;data&quot;:{&quot;attributes&quot;:{&quot;system.description&quot;:&quot;This is a test&quot;,&quot;system.remote_item_id&quot;:null,&quot;system.state&quot;:&quot;open&quot;,&quot;system.title&quot;:&quot;test this @{counter} workitem&quot;,&quot;version&quot;:1},&quot;relationships&quot;:{&quot;area&quot;:{},&quot;assignees&quot;:{},&quot;baseType&quot;:{&quot;data&quot;:{&quot;id&quot;:&quot;bbf35418-04b6-426c-a60b-7f80beb0b624&quot;,&quot;type&quot;:&quot;workitemtypes&quot;}},&quot;creator&quot;:{&quot;data&quot;:{&quot;id&quot;:&quot;${user.id}&quot;,&quot;links&quot;:{&quot;self&quot;:&quot;http://${server.host}:${server.port}/api/users/${user.id}&quot;},&quot;type&quot;:&quot;identities&quot;}},&quot;iteration&quot;:{},&quot;space&quot;:{&quot;data&quot;:{&quot;id&quot;:&quot;${workitems.space.id}&quot;,&quot;type&quot;:&quot;spaces&quot;}}},&quot;type&quot;:&quot;workitems&quot;}}">
         <header name="HttpSender" value="POST"/>
         <header name="Content-Type" value="application/json"/>
         <header name="Accept" value="application/json"/>
         <header name="Authorization" value="Bearer @{authToken}"/>
         <validatorRef id="printer"/>
      </message>
   </messages>
   <validation>
      <validator id="printer" class="PrintingValidator"/>
   </validation>
</scenario>
